
(in-package "TEST")

(define-test test-sample-som
    #+ignore
    (assert-prints
     (concatenate 'string
       (format nil "in-data-file [sample/som/animal.dat]~%")
       (format nil "s-topol[hexa] s-neigh[gaussian] xdim[24] ydim[16] nrand[123]~%")
       (format nil "num-label[10]~%")
       (format nil "step 1 : initialization ~%")
       (format nil "step 2 : learning ~%")
       (format nil "step 3 : calibration ~%")
       (format nil "step 4 : labeling ~%")
       (format nil "step 5 : making sammon map~%")
       (format nil "384 entries in codebook~%")
       (format nil "xma-xmi 3.074987831736982 yma-ymi 2.129596273225805"))
     (do-som-by-filename (asdf:system-relative-pathname 'clml.extras "sample/som/animal.dat") "hexa" "gaussian"
                         24 16 123 10000 5 2400 10
                         '(:absolute #+unix "tmp" #+mswindows "temp")))
    (multiple-value-bind (out-pathname ps-pathname)
        (do-som-by-filename (asdf:system-relative-pathname 'clml.extras "sample/som/animal.dat") "hexa" "gaussian"
                            24 16 123 10000 5 2400 10
                            '(:absolute #+unix "tmp" #+mswindows "temp"))
      (assert-true (probe-file out-pathname))
      (assert-true (probe-file ps-pathname))
      (with-open-file (stream out-pathname)
        (assert-eql (read stream) 3)
        (read-line stream)
        (assert-eql (read stream) 0.0)
        (assert-eql (read stream) 15.0)
        (read-line stream)
        (assert-eql (read stream) 0.0)
        (assert-eql (read stream) 0.0)
        (read-line stream)
        (assert-eql (read stream) 23.0)
        (assert-eql (read stream) 1.0)
        (read-line stream)
        (assert-eql (read stream) 21.0)
        (assert-eql (read stream) 0.0)
        (read-line stream)
        (assert-eql (read stream) 9.0)
        (assert-eql (read stream) 15.0)
        (read-line stream)
        (assert-eql (read stream) 0.0)
        (assert-eql (read stream) 10.0)
        (read-line stream)
        (assert-eql (read stream) 23.0)
        (assert-eql (read stream) 15.0)
        (read-line stream)
        (assert-eql (read stream) 17.0)
        (assert-eql (read stream) 15.0)
        (read-line stream)
        (assert-eql (read stream) 12.0)
        (assert-eql (read stream) 0.0))))